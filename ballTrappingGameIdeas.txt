---
Summary Plans
---

[done]		1. Game loop, with a ball, and a map, and collisions 
		occurring in an acceptable way
		1-1/2. Finish integrating box2d with game, with own graphics
[inprogress]	2. Clicking creates dividers, and animates them and all 
		visuals properly, plus all information about them.
[]		3. Ensure collisions work on dividers during and after 
		animations.
[]		4. Make gameover screen.
[]		5. Make sure you go to game over screen, when you hit a 
		bad part of a divider
[]		6. Record and display score. Initially in a span.
[]		7. keep number of lives, and show them. Also go to game
		over screen, when all lives are done.
[]		8. add spawn character for maps for balls.
[]		9. figure out how to do ajax stuff with game for levels and 
		scores.
[]		10. Put game on website.
[]		11. attempt to add touch support for iPhone browser.
[]		12. maybe add more fun stuff?

---

---
Ideas and Thoughts
---
"a game" will also have a stats object for recording various stats of the game, like close calls, and the entire path of the ball.

"a game" will have functions associated to events, like "startNewHorizontalWall", that can be mapped to a key via the main game loop.

there should be a basic simple class of "a game" that implements the basics, then an extension for the basic game type of closing off a certain amount of area, which defines everything.

we will need functions for objects, and drawing text.

When we have a basic working demo that does all the basics, make an hello splash screen that people click to start. Use a modular method of doing screens. Possibly with the ability to do different merges of screens, like the compsition thing of canvas.

bah circles are tricky. You can do a iterative-depth-first-search where you ensure no node ever gets repeated, and if you reach any part of the same divider, then you don't close off anything.

when checking to see if a divider takes away part of the level, you can mark that specific divider as special '0' as in the number. That is how you tell if you've returned.

